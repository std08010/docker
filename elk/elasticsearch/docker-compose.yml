version: '3.5'

services:
  elasticsearch1:
    #No need to declare this. The service name will be used by default.
    #The pattern is {folder}_{service_name}_{increasing_number} e.g. elk_elasticsearch1_1
    #container_name: elasticsearch1
    #If you don't want to build the image yourself with a Dockerfile 
    #then you can use this to download an image directly from docker hub
    #image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0 
    #This will build an image name {folder}_{service_name}:latest e.g. elk_kibana:latest
    build:
      context: ./
    volumes:
      - type: bind
        source: ./config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - 1_data:/usr/share/elasticsearch/data
    ports:
      - "9300:9300"
      - "9200:9200"
    networks:
      - esnet
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      #Enable security for the 9200 port communication. Declare this only on the master node.
      - "ELASTIC_PASSWORD=mypassword"
      #Here you put your host IP. The host is the machine you installed docker to.
      #It can be either an IP or a domain name e.g. elastic.cipitech.com
      #use this only when the ELK stack components are not on the same network
      #so the only way to communicate with elasticsearch is with the host IP
      - network.publish_host=10.0.2.15
      #Here we use the container name because they are on the same network.
      #Otherwise we would use the host IP.
      #Put only the master nodes separated by comma
      - discovery.seed_hosts=10.0.2.15
      #- discovery.seed_hosts=elasticsearch1
      - node.name=es1
      - node.master=true
      - node.data=true
      - node.ingest=true
      - cluster.initial_master_nodes=es1
    restart: always
    ulimits:
      memlock:
        soft: -1
        hard: -1
      
  elasticsearch2:
    depends_on:
      - elasticsearch1
    build:
      context: ./
    volumes:
      - type: bind
        source: ./config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - 2_data:/usr/share/elasticsearch/data
    networks:
      - esnet
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.seed_hosts=10.0.2.15
      #- discovery.seed_hosts=elasticsearch1
      - node.name=es2
      - node.master=false
      - node.data=true
      - node.ingest=true
      - cluster.initial_master_nodes=es1
    restart: always
    ulimits:
      memlock:
        soft: -1
        hard: -1

volumes:
  1_data:
    driver: local
  2_data:
    driver: local
    
networks:
  esnet:
    driver: bridge